from aiogram import F, Router
from aiogram.filters import Command, StateFilter
from aiogram.types import Message, ReplyKeyboardRemove
from aiogram.fsm.state import default_state
from aiogram.fsm.context import FSMContext


helper_router = Router()

text_help = "<b>Инструкция по работе бот</b>\n\n" \
            "<i>Разбираемся с командами\n</i>" \
            "<b>/start</b> - Отвечает за страт бота, присоединению к проекту по ссылке\n\n" \
            "<b>/project</b> - Отвечает за создание проектов, выгрузке отчетов, просмотр задач, " \
            "а также за создание ссылок\n" \
            "<u>Создание проекта</u>:\n" \
            "• Добавьте бота в чат, и дайте ему права администратора\n"\
            "• Введите команду /project\n"\
            "• Введите имя проекта\n" \
            "• После ввода имени создается проект и в чат присылается ссылка для ответственного\n"\
            "<u>Проект: отчет, ссылки, типы пользователей</u>:\n" \
            "• Добавление участников в проект происходит с помощью созданных ссылок\n"\
            "• Присоединиться в проект: нажать на ссылку, ввести имя и фамилию и все, дальше ждать задачи\n"\
            "• Ссылки бывают двух типов: для администратор; для ответственного\n"\
            "• Администраторы могут создавать события(задачи и мероприятия), " \
            "получать отчеты по проекту и добавлять пользователей \n"\
            "•  - Чтобы создать отчет или ссылки введите команду /project\n"\
            "•  - - Выберите мои проекты\n"\
            "•  - - Выберите проекты, где я администратор\n"\
            "•  - - Выберите, что вы хотите выполнить(ссылка или отчет)\n"\
            "•  - - Выберите проект и получите результат\n"\
            "•  - Чтобы просмотреть свои задачи\n"\
            "•  - - Выберите мои проекты\n"\
            "•  - - Выберите проекты, где я ответственный\n"\
            "•  - - Выберите проект и получите результат\n\n"\
            "<b>/event</b> - Отвечает за создание событий\n"\
            "<u>События и их типы</u>:\n" \
            "• События бывают двух типов\n"\
            "•  - Мероприятия - для всех участников проекта, всегда присылается в общий чат\n"\
            "•  - Задачи - для определенного ответственного, возможно выбрать тип оповещения о новой " \
            "задачи и ее выполнении\n\n"\
            "<b>/cancel</b> - Если, что то сломалось\n"\
            "<u>Если у вас не убираются кнопки</u>:\n"


@helper_router.message(Command("help"))
async def help_handler(msg: Message, state: FSMContext):
    await state.clear()
    await msg.answer("Готовим инструкцию...", reply_markup=ReplyKeyboardRemove())
    await msg.answer(text_help)


@helper_router.message(Command("cancel"), StateFilter(default_state))
async def cancel_handler(msg: Message, state: FSMContext):
    await state.clear()
    await msg.answer("Вы завершили состояния", reply_markup=ReplyKeyboardRemove())
